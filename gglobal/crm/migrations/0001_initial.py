# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-10 08:54
from __future__ import unicode_literals

import annoying.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import geoposition.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        ('viewflow', '0006_process_city'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('service', '0001_initial'),
        ('cities_light', '0006_compensate_for_0003_bytestring_bug'),
        ('sites', '0003_set_site_domain_and_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('subject', models.CharField(max_length=255)),
                ('detail', models.CharField(max_length=255)),
                ('created_by', annoying.fields.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Пометка',
                'verbose_name_plural': 'Пометки',
            },
        ),
        migrations.CreateModel(
            name='AutoCreateClientProcess',
            fields=[
                ('process_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='viewflow.Process')),
                ('creation_form', models.CharField(max_length=150, null=True, verbose_name='Форма создания')),
                ('form_name', models.CharField(max_length=150, null=True, verbose_name='Имя из формы')),
                ('text', models.CharField(max_length=150, null=True, verbose_name='Обращение из формы')),
                ('form_phone_number', models.CharField(help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона из формы')),
                ('choices', models.CharField(choices=[('order', 'Заказ'), ('consultation', 'Консультация'), ('complaint', 'Жалоба')], max_length=15)),
                ('approved', models.BooleanField(default=False, verbose_name='Дозвонился?')),
                ('first_name', models.CharField(max_length=150, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, null=True, verbose_name='Фамилия')),
                ('phone_number1', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи №1')),
                ('phone_number2', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи №2')),
                ('phone_number3', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи №3')),
                ('phone_number4', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи №4')),
                ('phone_number5', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи №5')),
                ('comment', models.CharField(max_length=150, null=True, verbose_name='Комментарий')),
                ('complaint_troube', models.CharField(max_length=150, null=True, verbose_name='Суть жалобы')),
                ('address', geoposition.fields.GeopositionField(max_length=42, verbose_name='Адресс')),
            ],
            options={
                'verbose_name': 'Автоматическое создание клиента',
                'verbose_name_plural': 'Автоматическое создание клиентов',
            },
            bases=('viewflow.process',),
        ),
        migrations.CreateModel(
            name='ClientCRMProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('troube', models.CharField(max_length=150, null=True, verbose_name='Суть жалобы')),
            ],
            options={
                'verbose_name': 'Жалоба',
                'verbose_name_plural': 'Жалобы',
            },
        ),
        migrations.CreateModel(
            name='CRMLeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, null=True, verbose_name='Имя')),
                ('comment', models.CharField(max_length=150, null=True, verbose_name='Комментарий')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cities_light.City', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Лид',
                'verbose_name_plural': 'Лиды',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField()),
                ('amount', models.IntegerField()),
                ('paid', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Счёт',
                'verbose_name_plural': 'Счеты',
            },
        ),
        migrations.CreateModel(
            name='MasterCRMProfile',
            fields=[
                ('user', annoying.fields.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Мастер',
                'verbose_name_plural': 'Мастера',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, null=True, verbose_name='Название')),
                ('description', models.CharField(max_length=255, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Способ оплаты',
                'verbose_name_plural': 'Способы оплаты',
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, null=True, verbose_name='Название')),
                ('description', models.CharField(max_length=255, null=True, verbose_name='Описание')),
                ('beneficiarys_account', models.CharField(max_length=255, null=True, verbose_name='Счёт плательщика')),
            ],
            options={
                'verbose_name': 'Тип оплаты',
                'verbose_name_plural': 'Типы оплаты',
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('start_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('created_by', annoying.fields.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('contact_phone_number', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи')),
                ('comment', models.CharField(max_length=255)),
                ('address', geoposition.fields.GeopositionField(max_length=42, verbose_name='Адресс')),
                ('activities', models.ManyToManyField(to='crm.Activity')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, null=True, verbose_name='Название')),
                ('color', models.CharField(max_length=25, null=True, verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
            },
        ),
        migrations.CreateModel(
            name='AutoCreateProjectProcess',
            fields=[
                ('process_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='viewflow.Process')),
                ('text', models.CharField(max_length=150, null=True, verbose_name='Обращение')),
                ('phone', models.CharField(help_text='Must include international prefix - e.g. +1 555 555 55555', max_length=25, null=True)),
                ('approved', models.BooleanField(default=False, verbose_name='Дозвонился?')),
                ('first_name', models.CharField(max_length=150, null=True, verbose_name='Имя')),
                ('closed', models.BooleanField(default=False, verbose_name='Блабла')),
                ('user', annoying.fields.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='crm.ClientCRMProfile')),
                ('sites', models.ManyToManyField(to='sites.Site')),
            ],
            options={
                'verbose_name': 'Автоматическое создание заказа',
                'verbose_name_plural': 'Автоматическое создание заказов',
            },
            bases=('viewflow.process',),
        ),
        migrations.AddField(
            model_name='project',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.ClientCRMProfile'),
        ),
        migrations.AddField(
            model_name='project',
            name='invoices',
            field=models.ManyToManyField(to='crm.Invoice'),
        ),
        migrations.AddField(
            model_name='project',
            name='master',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.MasterCRMProfile'),
        ),
        migrations.AddField(
            model_name='project',
            name='service',
            field=models.ManyToManyField(to='service.Service'),
        ),
        migrations.AddField(
            model_name='project',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site', verbose_name='Сайт'),
        ),
        migrations.AddField(
            model_name='project',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Status', verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='project',
            name='trouble',
            field=models.ManyToManyField(to='service.Trouble'),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='payment_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.PaymentType', verbose_name='Тип'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoice',
            name='payment_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='project_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Project'),
        ),
        migrations.AddField(
            model_name='crmleed',
            name='phone_number',
            field=models.ManyToManyField(to='crm.PhoneNumber', verbose_name='Номера телефонов'),
        ),
        migrations.AddField(
            model_name='crmleed',
            name='service',
            field=models.ManyToManyField(to='service.Service', verbose_name='Услуга'),
        ),
        migrations.AddField(
            model_name='crmleed',
            name='trouble',
            field=models.ManyToManyField(to='service.Trouble', verbose_name='Проблемы'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Project', verbose_name='Номер заказа'),
        ),
        migrations.AddField(
            model_name='clientcrmprofile',
            name='user',
            field=annoying.fields.AutoOneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='autocreateclientprocess',
            name='complaint_project_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Project', verbose_name='Номер заказа'),
        ),
        migrations.AddField(
            model_name='autocreateclientprocess',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.Country'),
        ),
        migrations.AddField(
            model_name='autocreateclientprocess',
            name='leed_city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.City', verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='autocreateclientprocess',
            name='service',
            field=models.ManyToManyField(blank=True, to='service.Service'),
        ),
        migrations.AddField(
            model_name='autocreateclientprocess',
            name='sites',
            field=models.ManyToManyField(to='sites.Site'),
        ),
        migrations.AddField(
            model_name='autocreateclientprocess',
            name='trouble',
            field=models.ManyToManyField(blank=True, to='service.Trouble'),
        ),
        migrations.AddField(
            model_name='activity',
            name='project_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Project', verbose_name='Номер заказа'),
        ),
    ]
