# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-21 12:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import geoposition.fields
import river.models.fields.state


class Migration(migrations.Migration):

    dependencies = [
        ('river', '0008_auto_20161017_0916'),
        ('sites', '0003_set_site_domain_and_name'),
        ('cities_light', '0006_compensate_for_0003_bytestring_bug'),
        ('service', '0004_auto_20170510_2228'),
        ('crm', '0004_auto_20170521_1433'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoCreateClientProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_form', models.CharField(max_length=150, null=True, verbose_name='Форма создания')),
                ('form_name', models.CharField(max_length=150, null=True, verbose_name='Имя из формы')),
                ('text', models.CharField(max_length=150, null=True, verbose_name='Обращение из формы')),
                ('form_phone_number', models.CharField(help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона из формы')),
                ('choices', models.CharField(choices=[('order', 'Заказ'), ('consultation', 'Консультация'), ('complaint', 'Жалоба')], max_length=15, verbose_name='Тип')),
                ('approved', models.BooleanField(default=False, verbose_name='Дозвонился?')),
                ('first_name', models.CharField(max_length=150, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, null=True, verbose_name='Фамилия')),
                ('phone_number1', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи №1')),
                ('phone_number2', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи №2')),
                ('phone_number3', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи №3')),
                ('phone_number4', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи №4')),
                ('phone_number5', models.CharField(blank=True, help_text='Должен быть в международном формате, например +375(25)907-50-55', max_length=25, null=True, verbose_name='Номер телефона для связи №5')),
                ('comment', models.CharField(max_length=150, null=True, verbose_name='Комментарий')),
                ('complaint_troube', models.CharField(max_length=150, null=True, verbose_name='Суть жалобы')),
                ('address', geoposition.fields.GeopositionField(max_length=42, null=True, verbose_name='Адресс')),
                ('flat', models.CharField(max_length=4, null=True, verbose_name='Квартира')),
                ('datetime', models.DateTimeField(null=True)),
                ('complaint_project_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.Project', verbose_name='Номер заказа')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.Country')),
                ('leed_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.City', verbose_name='Город')),
                ('service', models.ManyToManyField(blank=True, to='service.Service')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
                ('status', river.models.fields.state.StateField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='river.State')),
                ('trouble', models.ManyToManyField(blank=True, to='service.Trouble')),
            ],
            options={
                'verbose_name': 'Автоматическое создание клиента',
                'verbose_name_plural': 'Автоматическое создание клиентов',
            },
        ),
    ]
